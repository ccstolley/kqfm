{"name":"kqfm","body":"# KQFM: A utility to monitor files for changes\r\n\r\nLatest version: 1.0.0\r\n\r\n[Homepage](https://github.com/gabrielg/kqfm)\r\n\r\n`kqfm` takes a list of paths on `stdin` and monitors them for changes using `kqueue(1)`, outputting those changes to `stdout`.\r\n\r\n## Dependencies\r\n\r\n`kqfm` has no dependencies. It only works on platforms where `kqueue(1)` is available, such as Mac OS X, FreeBSD, NetBSD, OpenBSD, and DragonflyBSD.\r\n\r\n## Install\r\n\r\n### OS X via Homebrew\r\n\r\n`brew install https://raw.github.com/gabrielg/kqfm/master/brew/kqfm.rb`\r\n\r\nIf you like `kqfm`, please consider submitting [the formula](https://github.com/gabrielg/kqfm/blob/master/brew/kqfm.rb) to [Homebrew](https://github.com/mxcl/homebrew/wiki/Formula-Cookbook).\r\n\r\nI've already made the formula, but they frown on authors submitting their own work. I can't blame them.\r\n\r\n### OS X and other supported platforms, manually\r\n\r\nGet [the source](https://github.com/gabrielg/kqfm/tags) and run `make install`.\r\n\r\n## Examples\r\n\r\nWatch a directory of `.md` files for writes, and output a listing when a file is written to.\r\n\r\n\tfind doc -name '*.md' | kqfm -e write | while read path changes; do ls -la $path; done\r\n\r\nWatch a single file and run a command when it changes in any way.\r\n\r\n\techo \"file.c\" | kqfm | while read changes; do make; done\r\n\r\n[The man page](https://github.com/gabrielg/kqfm/blob/master/man/kqfm.md) contains some more usage information.\r\n\r\n## Similar projects\r\n\r\n[guard](https://github.com/guard/guard) and [wach](https://github.com/quackingduck/wach) both already exist, and may suit your needs better than this. Check them out too. \r\n\r\nI wrote this to scratch my own itch, which was for something with no dependencies that operates with plain old text, and leaves things like executing commands to other programs.\r\n\r\n## Contributing\r\n\r\nPatches appreciated. Fork, make changes, and send over a pull request.\r\n\r\n[Ronn](https://github.com/rtomayko/ronn) is used to generate the man page. I suggest using it to preview your work if you're changing the man page, but please don't commit the generated output from `ronn`, just commit the original Markdown file.\r\n\r\n## Author / Copyright\r\n\r\nGabriel Gironda, 2012. See LICENSE for license details.","tagline":"A simple CLI tool to watch a set of files under OS X","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}